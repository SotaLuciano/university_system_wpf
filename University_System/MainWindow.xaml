<Window x:Class="University_System.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:University_System"
        xmlns:converter="clr-namespace:University_System.Converters"
        xmlns:models="clr-namespace:University_System.Models"
        xmlns:viewModel="clr-namespace:University_System.ViewModel"
        xmlns:validation="clr-namespace:University_System.Validation"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="450"
        Width="800" MinWidth="850" MinHeight="450">
    <Window.Resources>
        <converter:GenderBackgroundColorConverter x:Key="BackgroundColorConverter"></converter:GenderBackgroundColorConverter>
        <converter:AgeBackgroundColorConverter x:Key="AgeBackgroundColorConverter"></converter:AgeBackgroundColorConverter>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></converter:BoolToVisibilityConverter>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"></converter:InverseBooleanConverter>
        <converter:GenderToIntConverter x:Key="GenderToIntConverter"></converter:GenderToIntConverter>
        <converter:SelectedItemToBoolConverter x:Key="SelectedItemToBoolConverter"></converter:SelectedItemToBoolConverter>
        <converter:DataContextToTextConverter x:Key="DataContextToTextConverter"></converter:DataContextToTextConverter>
        <converter:IntToBooleanConverter x:Key="IntToBooleanConverter"></converter:IntToBooleanConverter>
        <!--Control colors.-->
        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#ffffff</Color>
        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <!--Control-specific resources.-->
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>

        <!--<Style TargetType="{x:Type Button}"
                x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
                TypeInTargetAssembly={x:Type DataGrid}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                                                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                        Storyboard.TargetName="Arrow">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="Border"
                                        SnapsToDevicePixels="True">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                        StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                                    Offset="0" />
                                        <GradientStop Color="{DynamicResource BorderMediumColor}"
                                                    Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                        StartPoint="0.5,0">
                                        -->
        <!--ВЕРХНЯ ЛіВА КНОПКА КОЛІР--><!--
                                        <GradientStop Color="{DynamicResource ControlLightColor}"
                                                    Offset="0" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                     Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Polygon x:Name="Arrow"
                                       HorizontalAlignment="Right"
                                       Margin="8,8,3,3"
                                       Opacity="0.15"
                                       Points="0,10 10,10 10,0"
                                       Stretch="Uniform"
                                       VerticalAlignment="Bottom">
                                <Polygon.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Polygon.Fill>
                            </Polygon>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--Style and template for the DataGrid.-->
        <Style TargetType="{x:Type DataGrid}" >
            <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource BorderLightColor}"
                      Offset="0" />
                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness"
          Value="1" />
            <Setter Property="RowDetailsVisibilityMode"
          Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="False" />
            <Setter Property="ScrollViewer.PanningMode"
          Value="None" />
            <Setter Property="Stylus.IsFlicksEnabled"
          Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border x:Name="border"
                                SnapsToDevicePixels="True"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="#fcc96a"
                                                  Offset="0" />
                                    <GradientStop Color="#ffffff"
                                                  Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Panel.Background).
                                                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                        Value="{DynamicResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ScrollViewer x:Name="DG_ScrollViewer"
                                            Focusable="false"
                                            Background="Black"
                                          RequestBringIntoView="DG_ScrollViewer_OnRequestBringIntoView">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Button Focusable="false"
                                                  Command="{x:Static DataGrid.SelectAllCommand}"
                                                  Visibility="{Binding HeadersVisibility, 
                                                  ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                                  Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                  Width="{Binding CellsPanelHorizontalOffset, 
                                                  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Background="Blue"
                                                                            HorizontalContentAlignment="Center"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding HeadersVisibility, 
                                                                      ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                      Grid.ColumnSpan="2"
                                                                      Grid.Row="1"
                                                                      CanContentScroll="False" />

                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                         Grid.Column="2"
                                                         Grid.Row="1"
                                                         Orientation="Vertical"
                                                         ViewportSize="{TemplateBinding ViewportHeight}"
                                                         Maximum="{TemplateBinding ScrollableHeight}"
                                                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                         Value="{Binding VerticalOffset, Mode=OneWay, 
                                                  RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <Grid Grid.Column="1"
                                                  Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                          RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                           Grid.Column="1"
                                                           Orientation="Horizontal"
                                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Visibility="Hidden"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                    RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="PreviewMouseDown" Handler="EventSetter_OnHandler"></EventSetter>
            <Style.Triggers>
                <Trigger Property="IsGrouping"
             Value="true">
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Style and template for the DataGridCell.-->
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                            <Border.Background>
                                <MultiBinding Converter="{StaticResource BackgroundColorConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="DataContext.Gender"></Binding>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"></Binding>
                                </MultiBinding>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular"/>
                                    <VisualState x:Name="Current">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                                                                        (SolidColorBrush.Color)">
                                                <!--SELECTED CELL BORDER COLOR-->
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DatagridCurrentCellBorderColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip"
                    Value="{Binding Path=DataContext}"></Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" 
                         Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="#c7ff00"
                                              Offset="0" />
                                <GradientStop Color="#f7ff6b"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FontWeight" 
                            Value="Bold"></Setter>
                </Trigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.Gender}"
                             Value="Male">
                    <Setter Property="Background" Value="Blue"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--Style and template for the DataGridRow.-->
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="Validation.ErrorTemplate"
                    Value="{x:Null}" />
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red"
                                   Margin="2,0,0,0"
                                   Text="!"
                                   VerticalAlignment="Center" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Margin="-1,0,0,0"
                                SnapsToDevicePixels="True"
                                CornerRadius="10,10,10,10"
                                Background ="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}, 
                                            Mode=TwoWay, 
                                            Converter={StaticResource AgeBackgroundColorConverter}}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Normal_Selected">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="DGR_Border"
                                                            Storyboard.TargetProperty="(Panel.Background).Color"
                                                            To="#f48e00" Duration="0">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Unfocused_Selected">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="DGR_Border"
                                                            Storyboard.TargetProperty="(Panel.Background).Color"
                                                            To="#f48e00" Duration="0">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver_Editing">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="DGR_Border"
                                                            Storyboard.TargetProperty="(Panel.Background).Color"
                                                            To="#f48e00" Duration="0">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver_Unfocused_Editing">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="DGR_Border"
                                                            Storyboard.TargetProperty="(Panel.Background).Color"
                                                            To="#f48e00" Duration="0">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Unfocused_Editing">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="DGR_Border"
                                                            Storyboard.TargetProperty="(Panel.Background).Color"
                                                            To="#f48e00" Duration="0">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver_Selected">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="DGR_Border"
                                                            Storyboard.TargetProperty="(Panel.Background).Color"
                                                            To="#f48e00" Duration="0">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="DGR_Border"
                                                            Storyboard.TargetProperty="(Panel.Background).Color"
                                                            To="#ffdd00" Duration="0">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <SelectiveScrollingGrid IsHitTestVisible="True">
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <DataGridDetailsPresenter Grid.Column="1"
                                      Grid.Row="1"
                                      Visibility="{TemplateBinding DetailsVisibility}"
                                      SelectiveScrollingGrid.SelectiveScrollingOrientation=
                                    "{Binding AreRowDetailsFrozen, 
                                    ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                    Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                <DataGridRowHeader Grid.RowSpan="2"
                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                               Visibility="{Binding HeadersVisibility, 
                                ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="MouseDoubleClick" Handler="EventSetterMouseDoubleClick_OnHandler"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" 
                         Value="True">
                    <Setter Property="FontStyle" Value="Italic"></Setter>
                    <Setter Property="BorderBrush" Value="Red"></Setter>
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard TargetProperty="FontSize">
                                <DoubleAnimation To="20"
                                                 Duration="0:0:3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard TargetProperty="FontSize">
                                <DoubleAnimation To="12"
                                                 Duration="0:0:3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!--Style and template for the resize control on the DataGridColumnHeader.-->
        <Style x:Key="ColumnHeaderGripperStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="Width"
          Value="8" />
            <Setter Property="Background"
          Value="Transparent" />
            <Setter Property="Cursor"
          Value="SizeWE" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style and template for the DataGridColumnHeader.-->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="MinHeight" Value="30"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Border x:Name="columnHeaderBorder"
                                      BorderThickness="1"
                                      Padding="3,0,3,0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                                      Offset="0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#fcc96a"
                                                      Offset="0" />
                                        <GradientStop Color="#ffffff"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="Center" 
                                                  HorizontalAlignment="Center"
                                                  Width="Auto" />
                            </Border>

                            <Path x:Name="SortArrow" Visibility="Hidden" Stretch="Fill" 
                                  Width="7" Height="7" Fill="Black" Margin="0,2,8,0" 
                                  VerticalAlignment="Top"
                                  HorizontalAlignment="Center"  RenderTransformOrigin="0.5,0.4">
                                <Path.Data>
                                    <CombinedGeometry GeometryCombineMode="Union">
                                        <CombinedGeometry.Geometry1>
                                            <PathGeometry>
                                                <PathFigure IsClosed="False" 
                                                            StartPoint="3,1">
                                                    <LineSegment Point="3, 4" />
                                                    <LineSegment Point="1, -5" />

                                                </PathFigure>
                                            </PathGeometry>
                                        </CombinedGeometry.Geometry1>
                                        <CombinedGeometry.Geometry2>
                                            <PathGeometry>
                                                <PathFigure IsClosed="True" 
                                                            StartPoint="3, 4">
                                                    <LineSegment Point="3, 1" />
                                                    <LineSegment Point="5, -5" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </CombinedGeometry.Geometry2>
                                    </CombinedGeometry>
                                </Path.Data>
                            </Path>

                            <Thumb x:Name="PART_LeftHeaderGripper"
                                     HorizontalAlignment="Left"
                                     Style="{StaticResource ColumnHeaderGripperStyle}" />
                            <Thumb x:Name="PART_RightHeaderGripper"
                                     HorizontalAlignment="Right"
                                     Style="{StaticResource ColumnHeaderGripperStyle}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" 
                                     Value="Ascending">
                                <Setter TargetName="SortArrow" 
                                        Property="Visibility" 
                                        Value="Visible" />
                                <Setter TargetName="SortArrow" 
                                        Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" 
                                     Value="Descending">
                                <Setter TargetName="SortArrow" 
                                        Property="Visibility" 
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                                         StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                                      Offset="0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="GridError">
            <Grid Margin="0,-2,0,-2"
                  ToolTip="{Binding RelativeSource={RelativeSource
                            FindAncestor, AncestorType={x:Type DataGridRow}},
                            Path=(Validation.Errors)[0].ErrorContent}">
                <Ellipse StrokeThickness="0" 
                         Fill="Red"
                         Width="15"
                         Height="20" />
                <TextBlock Text="!" FontSize="15"
                           FontWeight="Bold" 
                           Foreground="White"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
            </Grid>
        </ControlTemplate>

        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:Sex"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" ></RowDefinition>
            <RowDefinition Height="Auto" ></RowDefinition>
            <RowDefinition Height="*" ></RowDefinition>
            <RowDefinition Height="Auto" ></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*" ></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.ColumnSpan="3"
                   Grid.Row="0"
                   MaxHeight="20">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="File">
                    <MenuItem Header="Open"/>
                    <MenuItem Header="Close"/>
                    <MenuItem Header="Save"/>
                </MenuItem>
                <MenuItem Header="Student">
                    <MenuItem Header="Load"
                              Command="{Binding LoadButtonClick}" />
                    <MenuItem Header="Add" 
                              Command="{Binding AddButtonClick}"/>
                </MenuItem>
            </Menu>
            <StackPanel></StackPanel>
        </DockPanel>

        <Grid Grid.ColumnSpan="3"
              Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" ></RowDefinition>
                <RowDefinition Height="Auto" ></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Row="0"
                       Grid.Column="0"
                       Margin="10,5,20,5">
                <Label Content="Select groups: "></Label>
                <ComboBox x:Name="myComboBox"
                          ItemsSource="{Binding AllAdministrativeInformations}"
                          HorizontalContentAlignment="Stretch"
                          MouseDown="MyComboBox_OnMouseDown"
                          MouseUp="MyComboBox_OnMouseUp" DropDownClosed="MyComboBox_OnDropDownClosed">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="2" 
                                       Text="{Binding Path=GroupName}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid x:Name="gd" 
                                              TextElement.Foreground="Black">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox x:Name="checkBox" 
                                                      Margin="5" 
                                                      Grid.Column="0"
                                                      Checked="CheckBox_OnChecked"
                                                      Unchecked="CheckBox_OnUnchecked"
                                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=OneWay}"></CheckBox>
                                            <TextBlock Margin="5"
                                                       Grid.Column="1" 
                                                       Text="{Binding Path=GroupName}"
                                                       MouseDown="MyComboBox_OnMouseDown"
                                                       MouseUp="UIElement_OnMouseUp"/>
                                            <TextBlock Margin="5" 
                                                       Grid.Column="2" 
                                                       Text="{Binding Path=SpecializationName}"
                                                       MouseDown="MyComboBox_OnMouseDown"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ComboBoxItem.IsSelected" 
                                                     Value="True">
                                                <Setter TargetName="gd"  
                                                        Property="Background" 
                                                        Value="Gray"></Setter>
                                                <Setter TargetName="gd"  
                                                        Property="TextElement.Foreground" 
                                                        Value="White"></Setter>
                                            </Trigger>
                                            <Trigger Property="ComboBoxItem.IsMouseOver" 
                                                     Value="True">
                                                <Setter TargetName="gd"
                                                        Property="Background" 
                                                        Value="Blue"></Setter>
                                                <Setter TargetName="gd"  
                                                        Property="TextElement.Foreground" 
                                                        Value="White"></Setter>
                                            </Trigger>
                                            <Trigger Property="ComboBoxItem.IsSelected"
                                                     Value="True">
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </DockPanel>

            <DockPanel Grid.Row="0"
                       Grid.Column="1"
                       Margin="0,5,20,5">
                <Label Content="LastName: "></Label>
                <TextBox Text="{Binding Path=LastNameFilter}"
                         TextChanged="FilterHandler"></TextBox>
            </DockPanel>

            <DockPanel Grid.Row="1"
                       Grid.Column="0"
                       Margin="10,5,20,5">
                <Label Content="From: "></Label>
                <DatePicker SelectedDate="{Binding Path=FromDateFilter, Mode=TwoWay}"
                            IsEnabled="{Binding IsDatePickerEnable}"
                            SelectedDateChanged="FilterHandler"></DatePicker>
                <Label Content="To: "></Label>
                <DatePicker SelectedDate="{Binding Path=ToDateFilter, Mode=TwoWay}"
                            IsEnabled="{Binding IsDatePickerEnable}"
                            SelectedDateChanged="FilterHandler"></DatePicker>
                <Button Content="{Binding Path=IsDatePickerEnableText, Mode=TwoWay}"
                        Margin="10,0,0,0"
                        Click="ButtonBase_OnClick"></Button>
            </DockPanel>

            <DockPanel Grid.Row="1"
                       Grid.Column="1"
                       Margin="0,5,20,5">
                <Label Content="Gender: "></Label>
                <ComboBox SelectionChanged="FilterHandler"
                          SelectedIndex="{Binding Path=GenderFilter, Mode=TwoWay}">
                    <ComboBoxItem Content="None"></ComboBoxItem>
                    <ComboBoxItem Content="Male"></ComboBoxItem>
                    <ComboBoxItem Content="Female"></ComboBoxItem>
                </ComboBox>
            </DockPanel>
        </Grid>

        <DataGrid x:Name="InfoGrid"    
                  Grid.Column="2"
                  Grid.Row="2"
                  AutoGenerateColumns="False" 
                  RowValidationErrorTemplate="{StaticResource GridError}"
                  ColumnWidth="*"
                  IsReadOnly="{Binding Path=IsEditModeEnabled, Converter={StaticResource InverseBooleanConverter}}"
                  ItemsSource="{Binding DataGridInformation}"
                  MinRowHeight="32"
                  PreviewTextInput="InfoGrid_OnPreviewTextInput"
                  CanUserAddRows="True"
                  InitializingNewItem="InfoGrid_OnInitializingNewItem"
                  MinWidth="400">
            <DataGrid.Columns>

                <DataGridTextColumn Binding="{Binding Path=GroupId}"
                                    Header="GroupId"></DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Path=FirstName}"
                                    Header="FirstName">
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Path=LastName}"
                                    Header="LastName">
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Path=Age}"       
                                    Header="Age">
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Gender"
                                        SortMemberPath="Gender"
                                        x:Name="ColumnTemplate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, 
                                                    Mode=TwoWay, 
                                                    Path=DataContext.Gender, 
                                                    UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox  ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                                       Width="{Binding ElementName=ColumnTemplate, Path=ActualWidth}"
                                       SelectedIndex="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.Gender, Converter={StaticResource GenderToIntConverter}}"
                                       SelectedItem="{Binding  RelativeSource={RelativeSource Self}, Mode=TwoWay, Path=DataContext.Gender, UpdateSourceTrigger=PropertyChanged}"
                                       HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding Path=Email}"
                                    Header="Email">
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="PhoneNumber"
                                        SortMemberPath="PhoneNumber">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                                    Path=DataContext.PhoneNumber}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.PhoneNumber}"
                                     TextChanged="TextBoxBase_OnTextChanged"
                                     PreviewKeyDown="UIElement_OnPreviewKeyDown"
                                     MaxLength="16"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding Path=Address}"
                                    Header="Address">
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Path=BornDateTime}"
                                    Header="BornDateTime">
                </DataGridTextColumn>

            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add student"
                              Command="{Binding AddStudentToGroupButtonClick}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                              IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=Parent.PlacementTarget.SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"></MenuItem>

                    <MenuItem Header="Remove student"
                              Command="{Binding RemoveStudentButtonClick}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                              IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=Parent.PlacementTarget.SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"></MenuItem>
                    <MenuItem Header="Duplicate student"
                              Command="{Binding DuplicateStudentButtonClick}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                              IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=Parent.PlacementTarget.SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowValidationRules>
                <DataErrorValidationRule ValidationStep="UpdatedValue"/>
                <validation:ColumnValidation ValidationStep="UpdatedValue">
                    <!--<validation:ColumnValidation.StudentList>
                        <validation:StudentHelper Students="{StaticResource StudentModel}"></validation:StudentHelper>
                        </validation:ColumnValidation.StudentList>-->
                </validation:ColumnValidation>
            </DataGrid.RowValidationRules>
        </DataGrid>

        <Popup Height="Auto" 
               Width="Auto"
               Name="MyPopup"
               StaysOpen="True"
               AllowsTransparency="True"
               IsOpen="{Binding Path=IsPopupOpen}"
               Placement="{Binding Path=PopupPlacementMode}">
            <Border BorderThickness="2"
                    BorderBrush="Black"
                    Background="OrangeRed">
                <TextBlock Text="{Binding Path=PopupText}"
                           Margin="3"/>
            </Border>
        </Popup>

        <GridSplitter HorizontalAlignment="Stretch"
                      ResizeDirection="Columns"
                      Width="3"
                      Grid.Column="1"
                      Grid.Row="2"
                      ResizeBehavior="PreviousAndNext" />

        <DataGrid x:Name="StudentGrid"
                  Grid.Row="2"
                  Grid.Column="0"
                  AutoGenerateColumns="False"
                  RowValidationErrorTemplate="{StaticResource GridError}"
                  ItemsSource="{Binding CurrentAdministrativeInformations}"
                  ColumnWidth="*"
                  MinRowHeight="32"
                  CanUserAddRows="False"
                  SelectedItem="{Binding SelectedRowAdministrativeInformation}"
                  MinWidth="400"
                  IsReadOnly="{Binding Path=IsEditModeEnabled, Converter={StaticResource InverseBooleanConverter}}">
            <DataGrid.Columns>

                <DataGridTextColumn Binding="{Binding Path=GroupName}"
                                    Header="GroupName"
                                    IsReadOnly="{Binding Path=IsEditModeEnabled, Converter={StaticResource InverseBooleanConverter}}">
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Path=SpecializationName}"
                                    Header="SpecializationName"
                                    IsReadOnly="True">
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Path=DepartmentName}"
                                    Header="DepartmentName"
                                    IsReadOnly="True">
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Path=InstituteName}"
                                    Header="InstituteName"
                                    IsReadOnly="True">
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove group"
                              Command="{Binding RemoveGroupButtonClick}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                              IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=Parent.PlacementTarget.SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"></MenuItem>
                    <MenuItem Header="Add student to group"
                              Command="{Binding AddStudentToGroupButtonClick}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                              IsEnabled="{Binding RelativeSource={RelativeSource Self}, Path=Parent.PlacementTarget.SelectedItem, Converter={StaticResource SelectedItemToBoolConverter}}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>

        </DataGrid>

        <Grid Grid.Row="3"
              Grid.ColumnSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" ></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0"
                    Grid.ColumnSpan="2"
                    Content="EDIT"
                    FontSize="20"
                    Visibility="Visible"
                    Command="{Binding Path=EditButtonClick}"
                    IsEnabled="{Binding Path=IsEditModeEnabled, Converter={StaticResource InverseBooleanConverter}}">
            </Button>
            <Button Grid.Row="0"
                    Grid.Column="0"
                    Content="CANCEL"
                    FontSize="20"
                    Command="{Binding Path=CancelButtonClick}"
                    Visibility="{Binding Path=IsEditModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                    IsEnabled="{Binding Path=IsEditModeEnabled}">
            </Button>
            <Button Grid.Row="0"
                    Grid.Column="1"
                    Content="SAVE"
                    FontSize="20"
                    Command="{Binding Path=SaveButtonClick}"
                    Visibility="{Binding Path=IsEditModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                    IsEnabled="{Binding Path=IsEditModeEnabled}">
            </Button>
        </Grid>
    </Grid>
</Window>
